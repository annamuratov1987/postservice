version: '3'

services:
  api:
    container_name: postservice-api
    build:
      context: .
      dockerfile: ./.docker/.Dockerfile.api
    environment:
      - PORT=9001
    networks:
      - api
    ports:
      - "9001:9001"
    depends_on:
      - loader
      - grud
  loader:
    container_name: postservice-loader
    build:
      context: .
      dockerfile: ./.docker/.Dockerfile.loader
    environment:
      - PORT=9002
    networks:
      - api
    ports:
      - "9002:9002"
    volumes:
      - ./:/go/src/github.com/annamuratov1987/postservice
    depends_on:
      - db
  grud:
    container_name: postservice-grud
    build:
      context: .
      dockerfile: ./.docker/.Dockerfile.grud
    environment:
      - PORT=9003
    networks:
      - api
    ports:
      - "9003:9003"
    volumes:
      - ./:/go/src/github.com/annamuratov1987/postservice
    depends_on:
      - db
  db:
    image: postgres:14.0-alpine
    container_name: postservice-db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./scripts/postgresql:/docker-entrypoint-initdb.d
    networks:
      - api
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    links:
      - db
    networks:
      - api
    depends_on:
      - db
volumes:
  db-data:
    driver: local
networks:
  api: